<?xml version="1.0"?>
<!--
  Universal robot ur5 launch. Wraps ur5_bringup.launch. Uses the 'limited'
  joint range [-PI, PI] on all joints.
  
  Usage:
    ur5_bringup_joint_limited.launch robot_ip:=<value>
-->
<launch>
  
  <!-- robot_ip: IP-address of the robot's socket-messaging server -->
<!--  
<arg name="robot_ip"/>
  <arg name="min_payload"  default="0.0"/>
  <arg name="max_payload"  default="5.0"/>
  <arg name="prefix" default="" />
  
  <include file="$(find ur_modern_driver)/launch/ur5_bringup.launch">
    <arg name="robot_ip" value="$(arg robot_ip)"/>
    <arg name="limited"  value="true"/>
    <arg name="min_payload"  value="$(arg min_payload)"/>
    <arg name="max_payload"  value="$(arg max_payload)"/>
    <arg name="prefix" value="$(arg prefix)" />
  </include>
  -->

  <arg name="limited" default="true"/>

  <!-- robot model -->
  <include file="$(find centauro_description)/launch/centauro_upload.launch">
    <arg name="limited" value="$(arg limited)"/>
  </include>

  <group ns="arm">

  <!-- robot_ip: IP-address of the robot's socket-messaging server -->
  <arg name="robot_ip" default="ur5"/>
  <arg name="min_payload"  default="0.0"/>
  <arg name="max_payload"  default="5.0"/>
  <arg name="prefix" default="" />
  
  <!-- ur common -->
  <include file="$(find ur_modern_driver)/launch/ur_common.launch">
    <arg name="prefix"  value="$(arg prefix)" />
    <arg name="robot_ip" value="$(arg robot_ip)"/>
    <arg name="min_payload"  value="$(arg min_payload)"/>
    <arg name="max_payload"  value="$(arg max_payload)"/>
  </include>
  </group>
  <!-- gripper  -->
	
<!--
	<rosparam file="$(find robotiq_2f_robot)/config/controllers.yaml" command="load"/>
	<node ns="simple_gripper" name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller joint_trajectory_controller"/>
-->
  <rosparam file="$(find robotiq_2f_robot)/config/controllers.yaml" command="load"/>
  <group ns="simple_gripper">
	<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller joint_trajectory_controller"/>
	<node name="simple_gripper_hw" pkg="robotiq_2f_hw_usb" type="robotiq_2f_hw_usb_node" respawn="false" output="screen">
		<param name="port" value="/dev/ttyUSB0" />
	</node>
  </group>

  <param name="publish_frequency" value="100"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
		<param name="use_gui" value="false"/>
		<rosparam param="source_list">[/simple_gripper/joint_states, /arm/joint_states]</rosparam>
  </node>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <!-- kinect2  -->
  <!--  <include file="$(find kinect2_bridge)/launch/kinect2_bridge.launch">
  </include> -->

  <!-- tf out of urdf  -->


  <node name="tf_world_kinect2_link" pkg="tf" type="static_transform_publisher" args="0.360 0.033 1.486 0.0 0.0 3.14 /world /kinect2_ir_optical_frame 100"/>
  <!-- <node name="tf_world_kinect2_link" pkg="tf" type="static_transform_publisher" args="0.360 0.033 1.486 0.0 0.0 3.14 /world /kinect2_link 100"/>
  <node name="tf_kinect2_link_rgb" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 /kinect2_link /kinect2_rgb_optical_frame 100"/>
  <node name="tf_kinect2_link_ir" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 kinect2_link /kinect2_ir_optical_frame 100"/> 
  <node name="tf_aruco_aruco_rotated" pkg="tf" type="static_transform_publisher" args="0.012 -0.009 0.0 -0.012 0.680 0.733 -0.029 /aruco_marker_frame /aruco_rotated 100"/> -->


</launch>


